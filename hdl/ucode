#   This file is part of JTKCPU.
#   JTKCPU program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.

#   JTKCPU program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.

#   You should have received a copy of the GNU General Public License
#   along with JTKCPU.  If not, see <http://www.gnu.org/licenses/>.

#   Author: Jose Tejada Gomez. Twitter: @topapate
#   Version: 1.0
#   Date: 3-03-2023 

# Solves an ALU operation in a single clock
# Will wait for OPN1 to be ready


RESET: PC=RST
       NI 

NOPE: NI

SINGLE_ALU:       OPN0=REGS, OPN1=MEM, UPREGS=ALU 
                  NI

SINGLE_ALU_16:    MEM16
                  OPN0=REGS, OPN1=MEM, UPREGS=ALU 
                  NI

SINGLE_ALU_INH:   OPN0=REGS, UPREGS=ALU 
                  NI

SINGLE_ALU_INH16: OPN0=REGS, UPREGS=ALU
                  NI  

SINGLE_ALU_IDX:   ADRIDX
                  OPN0=REGS, OPN1=MEM, UPREGS=ALU 
                  NI

SINGLE_ALU_IDX16: ADRIDX, MEM16
                  OPN0=REGS, OPN1=MEM, UPREGS=ALU
                  NI

MULTI_ALU:        OPN0=REGS, OPN1=MEM, WAITALU
                  UPREGS=ALU, NI

MEM_ALU_IDX:      ADRIDX 
                  OPN0=MEM 
                  WE, NI

MULTI_ALU_INH:    OPN0=REGS, UPREGS=ALU
                  NI

MULTI_ALU_IDX:    ADRIDX
                  OPN0=REGS, OPN1=MEM, WAITALU
                  UPREG=ALU, NI 

MULTI_MEMALU_IDX: ADRIDX
                  OPN0=MEM, WAITALU
                  WE, NI

WMEM_ALU:         OPN0=REGS, OPN1=MEM, WAITALU
                  WE, NI

SBRANCH: OPD
         PC=BRANCH, BRANCH8 
         NI 

LBRANCH: OPD, MEM16
         PC=BRANCH
         NI

LOOPX: PC_XNZ=BRANCH, DECX, NI

LOOPB: PC_BNZ=BRANCH, DECB, NI

MOVE:  ADRY, OPN0=MEM 
       WE, ADRX, DECU, INCY, INCX
       NI

BMOVE: ADRY, OPN0=MEM 
       WE, ADRX, DECU 
       INCY, INCX, BACK2
       WAITUZ
       NI

BSETA: OPN0=A, WE, ADRX, INCX, DECU, WAITUZ
       NI

BSETD: OPN0=D, MEM16 
       WE, ADRX, DECU 
       INCX, BACK2
       WAITUZ 
       NI 

JUMP: PC=BRANCH, MEM16 
      NI

JMSR: PC=BRANCH, MEM16, NI

RTIT: RTI_CC, PUL_GO 
      WAITPUL 
      RTI_OTHER, PUL_GO
      WAITPUL
      NI

RTSR: PC=PULS, NI

PSH:  PSH_GO
      OPN0=REGS, WE, WAITPSH
      NI

PUL:  PUL_GO
      OPN0=REGS, WAITPUL
      NI

FIRQ: E=0, PSHPC, PSHCC, F=1, I=1 
      PC=FIRQ
      NI

IRQ:  E=1, PSHALL, I=1 
      PC=IRQ 
      NI

NMI:  E=1, PSHALL, I=1, F=1 
      PC=NMI 
      NI

SETLINES: OPD
          UPLINES, NI

STORE8:  OPN0=REGS, ADRIDX, WE, NI

STORE16: ADRIDX, MEM16, OPN0=REGS, WE
         NI